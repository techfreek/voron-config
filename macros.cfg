[delayed_gcode disable_steppers]
gcode:
  M117 Disabling steppers
  M18

[delayed_gcode disable_leds]
gcode:
  SET_LED LED=led_strip RED=0 GREEN=0 BLUE=0

[gcode_macro G32]
description: Level the bed
gcode:
    BED_MESH_CLEAR
    G28
    {% if not printer.quad_gantry_level.applied %}
      QUAD_GANTRY_LEVEL
      G28 Z ; Re-home Z since QBL affects Z height
    {% endif %}
    BED_MESH_CALIBRATE  # don't see a way to skip the oppurtunistically
    G90

[gcode_macro LOG]
gcode:
    {% set MSG = params.MSG|string %}
    M117 {MSG}
    RESPOND MSG="{MSG}"

[gcode_macro STOP_STEPPERS]
gcode:
    M18

# This attempts to home z on restart just to raise off the last print if it was cancelled. Won't actually home
[delayed_gcode HOME_Z]
initial_duration: 0.5
gcode:
  G28 Z

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro M862.3]
gcode:
    {% if params.MK == "3" %}
      LOG MSG="Are you printing on the right printer? Looks to be the Prusa"
      SET_LED LED=led_strip RED=1 GREEN=0 BLUE=0
      G4 P10000 ; give time to check the print file
      SET_LED LED=led_strip RED=.5 GREEN=.5 BLUE=.5
    {% elif params.VORON_V %}
      LOG MSG="M117 Initializing print for Voron"
    {% elif params.VORON %}
      LOG MSG="M117 Initializing print for Voron"
    {% else %}
      LOG MSG="M117 Unable to detect print model: {params}"
    {% endif %}

[gcode_macro LED_PROGRESS_DELAY]
description: A delay macro that uses the rear leds as a progress bar
gcode:
    {% set NUM_REAR_LEDS = 8 - 1%}
    {% set DELAY = ( (params.DELAY|int) / (NUM_REAR_LEDS)) %}
    {% set RESET = params.RESET|default(0)|float %}
    {% set LED = params.LED|default("led_strip") %}

    {% if DELAY < 1000 %}
      { action_raise_error("Delay is in MS, not sec!") }
    {% endif %}

    ; make sure LEDs are on
    {% for led in range(NUM_REAR_LEDS+1) %}
      SET_LED LED={LED}  RED=0.75 GREEN=0.75 BLUE=0.75 INDEX={led + 1} TRASNMIT=1
    {% endfor %}

    ; now start the progress
    G4 P{DELAY}
    {% for led in range(NUM_REAR_LEDS) %}
      SET_LED LED=led_strip RED=0 GREEN=0 BLUE=0 INDEX={led + 1}
      G4 P{DELAY}
    {% endfor %}
    SET_LED LED={LED} RED={RESET} GREEN={RESET} BLUE={RESET}

[gcode_macro BLINK_LEDS]
description: Blink leds
gcode:
    {% set DURATION = params.DURATION|default(5000)|int %}
    {% set DELAY = params.DELAY|default(500)|int %}
    {% set RESET = params.RESET|default(0.75)|float %}
    {% set LED = params.LED|default("led_strip") %}
    {% set BLINK_COUNT = (DURATION / DELAY)|round|int %}

    {% if DURATION < 1000 %}
      { action_raise_error("Delay is in MS, not sec!") }
    {% endif %}

    {% for i in range(BLINK_COUNT) %}
        # blink leds
        {% if loop.index is divisibleby 2 %}
          SET_LED LED={LED} RED=0 GREEN=0 BLUE=0
        {% else %}
          SET_LED LED={LED} RED=.75 GREEN=.75 BLUE=.75
        {% endif %}
        G4 P{DELAY}
    {% endfor %}

    SET_LED LED={LED} RED={RESET} GREEN={RESET} BLUE={RESET}

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    LED_STRIP_ANIMATION FROM=0 TO=0.75 DELAY=50
    {% set EXTRUDER = params.EXTRUDER|default(0)|int  %}
    {% set EXTRUDER_START_TEMP = printer.extruder.temperature|int %}
    {% set BED = params.BED|default(0)|int %}
    {% set BED_START_TEMP = printer.heater_bed.temperature|default(24)|int %}
    {% set SOAK_MULTIPLIER = 15 %}
    {% set AMBIENT = 25 %}
    {% set MIN_SOAK_TIME = (((BED-AMBIENT) * (BED-AMBIENT))/AMBIENT) %}
    {% set BED_SOAK_DELAY = [(BED - BED_START_TEMP) * SOAK_MULTIPLIER, MIN_SOAK_TIME]|max %}
    {% set BED_SOAK_DELAY = [BED_SOAK_DELAY, 15 * 60]|min %}
    {% set HOMED_AXES = printer.toolhead.homed_axes %}
    {% set NOZZLE_CLEAN_TIME = 30  * 1000 %}
    {% set HEAT_SOAK_ENABLED = 1 %}
    {% set DEBUGGING_DELAY = 3000 %}

    BED_MESH_CLEAR

    UPDATE_DELAYED_GCODE ID=disable_leds DURATION=0
    M104 S0 ; disable nozzle heating until we need the nozzle heated
    M220 S100 ; set print speed to 100%
    M221 S100 ; set flow rate to 100%
    M107 ; disable fans

    {% if BED_SOAK_DELAY > 0 %}
      LOG MSG="Heating the bed"
      M140 S{BED} ; start heating the bed, but don't wait
    {% endif %}
    
    ; pre-home the bed so we can clean the nozzle
    ;{% if HOMED_AXES != "xyz" %}
      ;G28 ; do a rough home, but we'll have to home again after cleaning the nozzle by hand
    ;{% endif %}
    ;CLEAN_NOZZLE
    ;WORKING_HEIGHT

    ; handle bed heating
    {% if BED > 0 %}
      SET_LED LED=led_strip RED=.75 GREEN=0 BLUE=0
      LOG MSG="Waiting for bed to heat"
      M190 S{BED} #Wait to reach temperature before proceeding with nozzle scrub.
      # heat soak the bed
      {% if BED_SOAK_DELAY > 0 and HEAT_SOAK_ENABLED == 1 %}
        LOG MSG="Heat soaking bed for {(BED_SOAK_DELAY / 60)|round(1)} minutes"
        LED_PROGRESS_DELAY DELAY={BED_SOAK_DELAY * 1000} RESET=1
        LOG MSG="Done heat soaking"
      {% endif %}
      G4 P{DEBUGGING_DELAY}
      SET_LED LED=led_strip RED=0.75 GREEN=0.75 BLUE=0.75
    {% endif %}

    ; LOG MSG="Make sure nozzle is clean"
    ; Blink to notify nozzle is ready to clean
    ; BLINK_LEDS DURATION=1500
    ; LED_PROGRESS_DELAY DELAY={NOZZLE_CLEAN_TIME} RESET=.75

    ;LOG MSG="Homing..."
    ;G28
    ;QUAD_GANTRY_LEVEL
    ;LOG MSG="Re-homing Z..."
    ;G28 Z ; Re-home Z since QBL affects Z height
    ;LOG MSG="Mesh bed leveling"
    ;BED_MESH_CALIBRATE ; probe mesh every print

    LOG MSG="Homing..."
    G28
    QUAD_GANTRY_LEVEL
    LOG MSG="Re-homing Z..."
    G28 Z ; Re-home Z since QBL affects Z height
    LOG MSG="Mesh bed leveling"
    BED_MESH_CALIBRATE ; probe mesh every print

    ; handle extruder heating
    {% if EXTRUDER > 0 %}
      LOG MSG="Heating extruder"
      G1 Z25 X10 Y248 F6000 ; move nozzle by the brush
      G1 Z5 F6000 ; move nozzle next to brush

      {% if EXTRUDER > 220 %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.75
      {% endif %}

      LOG MSG="Waiting for hotend to heatup"
      SET_LED LED=led_strip RED=0.75 GREEN=0 BLUE=0
      M109 S{EXTRUDER} #Wait to reach temperature before proceeding with nozzle scrub.
      G4 P2000

      LOG MSG="Prime nozzle"
      G1 E5 F300; Extrude some filament
      M400 ;

      G4 P2000 ; Wait for filament to ooze a bit (2sec)
      LOG MSG="Clean 2nd time"
      CLEAN_NOZZLE
    {% endif %}    

    
    ABSOLUTE_POSITIONING ; set to absolute for moving away from the nozzle
    BLINK_LEDS DURATION=1500
    ; move away from nozzle brush
    G1 Z25 F6000                   
    ; purge line
    G1 X0 Y0 Z.10 ;move to corner of bed
    G92 E0 ;zero the extruded length
    G1 X120.0 E18.0 F1000.0 ; intro line
    G92 E0 ;zero the extruded length
    ; Just move the nozzle up a bit before the print starts
    G1 Z5 F6000
    RELATIVE_POSITIONING ; set to relative positioning for print
    LED_STRIP_ANIMATION FROM=0.75 TO=1.0 DELAY=25

    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

    LOG MSG="Print starting"

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    {% set Z_POS = printer.toolhead.position.z|float %}
    {% set MAX_Z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set TARGET_Z = Z_POS + (((MAX_Z - 5) - Z_POS)/2)|float %} # target is halfway to top
    M400                           ; wait for buffer to clear
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

    ;move the toolhead out of the way
    G90                            ; set absolute extrusion

    M220 S100                      ; reset speed to 100
    G1 X125 Y250
    G0 Z{[TARGET_Z, MAX_Z]|min} F3600 ; park nozzle at rear (safety check by using min of target and max_z)

    # bed mesh/steppers/etc are disabled in the idle timeout. Gives a chance to start a new print without having to re-run

    BLINK_LEDS DURATION=2500
    UPDATE_DELAYED_GCODE ID=disable_leds DURATION=300
    LED_STRIP_ANIMATION FROM=1.0 TO=0.5 DELAY=50

[gcode_macro PROBE_CALIBRATE]
description: Calibrate probe offset
rename_existing: PROBE_CALIBRATE_BASE
gcode:
   {% if printer.toolhead.homed_axes != "xyz" %}
     G28
   {% endif %}
   G90
   G1 X125 Y125 Z25 F600
   PROBE_CALIBRATE_BASE

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
   {% set Z_POS = printer.toolhead.position.z|float %}
   {% set MAX_Z = printer.configfile.config["stepper_z"]["position_max"]|float %}
   {% set TARGET_Z = Z_POS + (((MAX_Z - 5) - Z_POS)/2)|float %} # target is halfway to top
   TURN_OFF_HEATERS
   G90                            ; absolute positioning
   G0 X125 Y250 GO Z{[TARGET_Z, MAX_Z]|min} F3600 ; park nozzle at rear (safety check by using min of target and max_z)
   CANCEL_PRINT_BASE
   SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
   M106 S0
   ; M220 S100 ; Reset Speed factor override percentage to default (100%)
   ; M221 S100 ; Reset Extrude factor override percentage to default (100%)
   ; G92 E0                         ; zero the extruder
   ; G0 E-10.0 F3600                ; retract filament
   ; M18                            ; turn off steppers
   ; BED_MESH_CLEAR
   ; STOP_STEPPERS


[gcode_macro WORKING_HEIGHT]
description: Move the extruder to a good working position
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 X125 Y50 Z125 F6000

[gcode_macro BOTTOM_LEFT]
description: Move the extruder to a bottom left
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G90
    G1 X0 Y0 Z10 F6000

[gcode_macro PARK_REAR]
description: Move the extruder to the back of the print area
gcode:
    {% if HOMED_AXES != "xyz" %}
      G28
    {% endif %}
    G90
    G0 X245 Y245 Z215 F3600            ; park nozzle at rear

[gcode_macro ABSOLUTE_POSITIONING]
gcode:
    G90

[gcode_macro RELATIVE_POSITIONING]
gcode:
    G91
    
[gcode_macro LEDS_ON]
gcode:
    UPDATE_DELAYED_GCODE ID=disable_leds DURATION=0
    SET_LED LED=led_strip RED=1 GREEN=1 BLUE=1

[gcode_macro LEDS_OFF]
gcode:
    SET_LED LED=led_strip RED=0 GREEN=0 BLUE=0

[gcode_macro LED_STRIP_ANIMATION]
gcode:
      {% set FROM = params.FROM|default(0)|float %}
      {% set TO = params.TO|default(1)|float %}
      {% set DELAY = params.DELAY|default(100)|int %}
      {% set NUM_LEDS = 26|int %}
      {% set NUM_LEDS = printer.configfile.config["neopixel led_strip"]["chain_count"]|int %}
      {% set NUM_SEGMENTS = 3 %}
      {% set NUM_SEGMENT_LEDS = (NUM_LEDS / NUM_SEGMENTS)| int %}
      {% set NUM_SEGMENT_LEDS_HALF = (NUM_SEGMENT_LEDS / 2)| int %}

      # animate rear leds starting from middle and going out
      {% for led in range(NUM_SEGMENT_LEDS_HALF) %}
        SET_LED LED=led_strip  RED={TO} GREEN={TO} BLUE={TO} INDEX={5 + led} TRASNMIT=0
        SET_LED LED=led_strip  RED={TO} GREEN={TO} BLUE={TO} INDEX={4 - led} TRASNMIT=1
        G4 P{DELAY}
      {% endfor %}

      # animate side led strips from back to front
      {% for led in range(NUM_SEGMENT_LEDS) %}
        SET_LED LED=led_strip  RED={TO} GREEN={TO} BLUE={TO} INDEX={NUM_SEGMENT_LEDS + led} TRASNMIT=0
        SET_LED LED=led_strip  RED={TO} GREEN={TO} BLUE={TO} INDEX={(3 * NUM_SEGMENT_LEDS) - led} TRASNMIT=1
        G4 P{DELAY}
      {% endfor %}

      SET_LED LED=led_strip RED={TO} GREEN={TO} BLUE={TO} INDEX=25
      SET_LED LED=led_strip RED={TO} GREEN={TO} BLUE={TO} INDEX=26
      G4 P{DELAY}

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute

[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute